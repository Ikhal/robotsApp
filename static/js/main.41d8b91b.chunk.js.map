{"version":3,"sources":["components/card.js","components/cardlist.js","components/searchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4OAeeA,EAbF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACxB,OACE,sBAAKC,UAAU,kDAAf,UACA,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cAClB,gCACA,6BAAKF,IACL,4BAAIC,WCOKK,EAbC,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAChB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAKC,GACpB,OAAO,cAAC,EAAD,CAEPR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAQM,EAAOG,GAAGT,OAHbS,SCMMC,EAXG,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC/B,OACE,qBAAKV,UAAU,MAAf,SACE,uBAAOA,UAAU,mCAAmCW,KAAK,SAC3DC,YAAY,eACVC,SAAUH,OCIDI,G,MATA,SAACC,GAEd,OACE,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAAnE,SACGJ,EAAMK,aCcEC,E,kDAjBb,WAAYN,GAAO,IAAD,8BAChB,cAAMA,IACDO,MAAO,CACVC,UAAU,GAHI,E,qDAMlB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE1B,WACE,OAAIG,KAAKJ,MAAMC,SACN,4DAEFG,KAAKX,MAAMK,a,GAdMQ,aCgDbC,E,kDA3Cb,aAAc,IAAD,8BACX,gBAYFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAClB,YAAYsB,EAAMC,OAAOC,SAZtC,EAAKX,MAAO,CACVlB,OAAO,GACPK,YAAY,IAJL,E,qDAQb,WAAoB,IAAD,OACjByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAACvB,OAAOkC,S,oBAMxC,WACE,MAA6BZ,KAAKJ,MAA5BlB,EAAN,EAAMA,OAAQK,EAAd,EAAcA,YACR8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACnC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAGvD,OAAsB,IAAlBtC,EAAOwC,OACF,yCAGL,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACF,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQmC,e,GAjCVX,aCMHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,8BACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.41d8b91b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id})=>{\r\n  return(\r\n    <div className=\"tc bg-light-green dib pa3 ma2 grow bw2 shadow-5\">\r\n    <img alt=\"robot\" src={`https://robohash.org/${id}?200x200`}/>\r\n      <div>\r\n      <h2>{name}</h2>\r\n      <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Card","import React from \"react\";\r\nimport Card from \"./card\";\r\nconst Cardlist =({robots})=>{ \r\n  return (\r\n    <div>\r\n      {robots.map((user,i)=>{\r\n    return <Card \r\n    key={i}\r\n    id={robots[i].id} \r\n    name={robots[i].name} \r\n    email ={robots[i].email} />\r\n  })}\r\n    </div>\r\n  )\r\n}\r\nexport default Cardlist","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield, searchChange})=>{\r\n  return (\r\n    <div className='pa2'>\r\n      <input className='pa3 ba b--green bg-lightest-blue' type='search'\r\n    placeholder='searchRobots' \r\n      onChange={searchChange}\r\n    />\r\n    </div>\r\n    \r\n  )\r\n}\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props)=>{\r\n  \r\n  return (\r\n    <div style={{overflowY:'scroll', border: '2px solid black', height:'800px'}}>\r\n      {props.children}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Scroll","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundary extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state ={\r\n      hasError: false\r\n    }\r\n  }\r\n  componentDidCatch(error, info){\r\n    this.setState({hasError:true})\r\n  }\r\n  render(){\r\n    if (this.state.hasError) {\r\n      return <h1>Ooooh Something went wrong</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from \"react\";\r\nimport Cardlist from \"../components/cardlist\";\r\nimport SearchBox from \"../components/searchBox\";\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nclass App extends Component {\r\n  constructor(){\r\n    super()\r\n      this.state ={\r\n        robots:[],\r\n        searchfield:''\r\n      }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => {this.setState({robots:users})})\r\n  }\r\n  onSearchChange = (event)=>{\r\n    this.setState({searchfield:event.target.value})\r\n  }\r\n  \r\n  render(){\r\n    const{robots, searchfield} = this.state;\r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n\r\n    if (robots.length === 0) {\r\n      return <h1>Loading</h1>\r\n    }else{\r\n      return (\r\n        <div className='tc'>\r\n          <h1 className='f1'>RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n        <ErrorBoundary>\r\n          <Cardlist robots={filteredRobots}/>\r\n        </ErrorBoundary>\r\n        </Scroll>\r\n        \r\n        </div>\r\n      )\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n//import Card from './card';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n    \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}